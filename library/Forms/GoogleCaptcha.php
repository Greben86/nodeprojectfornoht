<?php/** @see Zend_Service_ReCaptcha_Response */class Google_Service_ReCaptcha extends Zend_Service_ReCaptcha{        public function getHtml($name = null) {                if ($this->_publicKey === null) {            /** @see Zend_Service_ReCaptcha_Exception */            require_once 'Zend/Service/ReCaptcha/Exception.php';            throw new Zend_Service_ReCaptcha_Exception('Отсутствует публичный ключ');        }        $errorPart = '';        if (!empty($this->_params['error'])) {            $errorPart = '&error=' . urlencode($this->_params['error']);        }        $return = <<<HTML<div class="g-recaptcha" data-sitekey="{$this->_publicKey}{$errorPart}"></div>HTML;        return $return;         }        protected function _post($challengeField, $responseField) {        if ($this->_privateKey === null) {            /** @see Zend_Service_ReCaptcha_Exception */            require_once 'Zend/Service/ReCaptcha/Exception.php';            throw new Zend_Service_ReCaptcha_Exception('Missing private key');        }        if ($this->_ip === null) {            /** @see Zend_Service_ReCaptcha_Exception */            require_once 'Zend/Service/ReCaptcha/Exception.php';            throw new Zend_Service_ReCaptcha_Exception('Missing ip address');        }        /* Fetch an instance of the http client */        $httpClient = self::getHttpClient();        $httpClient->resetParameters(true);        $postParams = array('secret' => $this->_privateKey,                            'remoteip'   => $this->_ip,                            'response'   => $responseField);        /* Make the POST and return the response */        return $httpClient->setUri('https://www.google.com/recaptcha/api/siteverify')                          ->setParameterPost($postParams)                          ->request(Zend_Http_Client::POST);    }}